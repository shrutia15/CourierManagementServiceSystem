{"ast":null,"code":"import axios from 'axios';\nimport { createUrl } from '../utils';\nexport async function login(email, password) {\n  try {\n    // create the url\n    const url = createUrl('login');\n\n    // create the request body\n    const body = {\n      email,\n      password\n    };\n\n    // call the API\n    const response = await axios.post(url, body);\n\n    // get the response body\n    return response;\n  } catch (ex) {\n    return {\n      status: 'error',\n      error: ex\n    };\n  }\n}\nexport async function register(firstName, lastName, email, contactNumber, password, address) {\n  try {\n    const url = createUrl('register');\n    const body = {\n      firstName,\n      lastName,\n      email,\n      contactNumber,\n      password,\n      flatNo: address.flatNo,\n      streetName: address.streetName,\n      landmark: address.landmark,\n      city: address.city,\n      state: address.state,\n      pincode: address.pincode\n    };\n    const response = await axios.post(url, body);\n    return response.data;\n  } catch (ex) {\n    return {\n      status: 'error',\n      error: ex\n    };\n  }\n}\nexport async function registerDelivery(firstName, lastName, email, contactNumber, password, address) {\n  try {\n    const url = createUrl('warehouse/register');\n    const token = sessionStorage['token'];\n    const id = sessionStorage[\"userId\"];\n    const body = {\n      warehouseManagerId: id,\n      firstName,\n      lastName,\n      email,\n      contactNumber,\n      password,\n      flatNo: address.flatNo,\n      streetName: address.streetName,\n      landmark: address.landmark,\n      city: address.city,\n      state: address.state,\n      pincode: address.pincode\n    };\n    const response = await axios.post(url, body, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (ex) {\n    return {\n      status: 'error',\n      error: ex\n    };\n  }\n}\nexport async function updatePassword(password) {\n  try {\n    const url = createUrl('user/update-password');\n    const body = {\n      password\n    };\n    const token = sessionStorage['token'];\n    const response = await axios.put(url, body, {\n      headers: {\n        token\n      }\n    });\n    return response.data;\n  } catch (ex) {\n    return {\n      status: 'error',\n      error: ex\n    };\n  }\n}\nexport async function getMyProfile() {\n  try {\n    const id = sessionStorage['userId'];\n    const url = createUrl('profile/' + id);\n    const token = sessionStorage['token'];\n    const response = await axios.get(url, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (ex) {\n    return {\n      status: 'error',\n      error: ex\n    };\n  }\n}\nexport async function updateMyProfile(firstName, lastName, contactNumber, address) {\n  try {\n    const url = createUrl('updateprofile');\n    const id = sessionStorage[\"userId\"]; // Ensure id is retrieved\n    const token = sessionStorage[\"token\"];\n    if (!id) {\n      console.error(\"User ID is missing from session storage\");\n      return {\n        status: 'error',\n        error: \"User ID missing\"\n      };\n    }\n    const body = {\n      id,\n      firstName,\n      lastName,\n      contactNumber,\n      address\n    };\n    const response = await axios.post(url, body, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (ex) {\n    return {\n      status: 'error',\n      error: ex\n    };\n  }\n}\nexport async function placeOrder(orderData) {\n  try {\n    const url = createUrl('customer/place-order');\n    console.log(\"Sending order data:\", orderData);\n    const token = sessionStorage['token'];\n    if (!orderData.senderId || !orderData.fromWarehouse || !orderData.toWarehouse) {\n      return {\n        status: 'error',\n        error: \"Missing required order fields\"\n      };\n    }\n    const response = await axios.post(url, orderData, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    console.log(\"Order placed response:\", response.data);\n    return response;\n  } catch (ex) {\n    var _ex$response, _ex$response$data, _ex$response2, _ex$response2$data;\n    console.error(\"Place order error:\", ((_ex$response = ex.response) === null || _ex$response === void 0 ? void 0 : (_ex$response$data = _ex$response.data) === null || _ex$response$data === void 0 ? void 0 : _ex$response$data.message) || ex.message);\n    return {\n      status: 'error',\n      error: ((_ex$response2 = ex.response) === null || _ex$response2 === void 0 ? void 0 : (_ex$response2$data = _ex$response2.data) === null || _ex$response2$data === void 0 ? void 0 : _ex$response2$data.message) || ex.message\n    };\n  }\n}","map":{"version":3,"names":["axios","createUrl","login","email","password","url","body","response","post","ex","status","error","register","firstName","lastName","contactNumber","address","flatNo","streetName","landmark","city","state","pincode","data","registerDelivery","token","sessionStorage","id","warehouseManagerId","headers","updatePassword","put","getMyProfile","get","updateMyProfile","console","placeOrder","orderData","log","senderId","fromWarehouse","toWarehouse","_ex$response","_ex$response$data","_ex$response2","_ex$response2$data","message"],"sources":["E:/CDAC PROJECT/Final Project/Courier_Service_Manangement_System/Courier_Service_Manangement_System/Frontend/src/services/user.js"],"sourcesContent":["import axios from 'axios'\nimport { createUrl } from '../utils'\n\nexport async function login(email, password) {\n  try {\n    // create the url\n    const url = createUrl('login')\n\n    // create the request body\n    const body = {\n      email,\n      password,\n    }\n\n    // call the API\n    const response = await axios.post(url, body);\n\n    // get the response body\n    return response\n  } catch (ex) {\n    return { status: 'error', error: ex }\n  }\n}\n\nexport async function register(firstName, lastName, email, contactNumber, password,address) {\n  try {\n    const url = createUrl('register')\n    const body = {\n      firstName,\n      lastName,\n      email,\n      contactNumber,\n      password,\n      flatNo: address.flatNo,\n      streetName:address.streetName,\n      landmark:address.landmark,\n      city:address.city,\n      state:address.state,\n      pincode:address.pincode\n    }\n    const response = await axios.post(url, body)\n    return response.data\n  } catch (ex) {\n    return { status: 'error', error: ex }\n  }\n}\n\nexport async function registerDelivery(firstName, lastName, email, contactNumber, password,address) {\n  try {\n    const url = createUrl('warehouse/register')\n    const token=sessionStorage['token']\n    const id = sessionStorage[\"userId\"]\n    const body = {\n      warehouseManagerId:id,\n      firstName,\n      lastName,\n      email,\n      contactNumber,\n      password,\n      flatNo: address.flatNo,\n      streetName:address.streetName,\n      landmark:address.landmark,\n      city:address.city,\n      state:address.state,\n      pincode:address.pincode\n\n    }\n    const response = await axios.post(url, body,{\n      headers: {\n        'Authorization': `Bearer ${token}`,\n    'Content-Type': 'application/json'\n      },\n    })\n    return response.data\n  } catch (ex) {\n    return { status: 'error', error: ex }\n  }\n}\nexport async function updatePassword(password) {\n  try {\n    const url = createUrl('user/update-password')\n    const body = {\n      password,\n    }\n    const token = sessionStorage['token']\n    const response = await axios.put(url, body, {\n      headers: { token },\n    })\n    return response.data\n  } catch (ex) {\n    return { status: 'error', error: ex }\n  }\n}\n\nexport async function getMyProfile() {\n  try {\n    const id = sessionStorage['userId']\n    const url = createUrl('profile/'+id)\n    const token = sessionStorage['token']\n    const response = await axios.get(url, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n    'Content-Type': 'application/json'\n      },\n    })\n  \n    \n   \n\n    return response.data\n  } catch (ex) {\n    return { status: 'error', error: ex }\n  }\n}\n\nexport async function updateMyProfile(firstName, lastName, contactNumber, address) {\n  try {\n    const url = createUrl('updateprofile');\n    const id = sessionStorage[\"userId\"]; // Ensure id is retrieved\n    const token = sessionStorage[\"token\"]\n    if (!id) {\n      console.error(\"User ID is missing from session storage\");\n      return { status: 'error', error: \"User ID missing\" };\n    }\n\n    const body={\n      id,\n      firstName,\n      lastName,\n      contactNumber,\n      address\n    }\n\n    const response = await axios.post(url, body,{\n      headers: {\n        'Authorization': `Bearer ${token}`,\n    'Content-Type': 'application/json'\n      },\n    });\n    return response.data;\n  } catch (ex) {\n    return { status: 'error', error: ex };\n  }\n}\nexport async function placeOrder(orderData) {\n  try {\n    const url = createUrl('customer/place-order');\n    console.log(\"Sending order data:\", orderData);\n    const token = sessionStorage['token']\n\n    if (!orderData.senderId || !orderData.fromWarehouse || !orderData.toWarehouse) {\n      return { status: 'error', error: \"Missing required order fields\" };\n    }\n\n    const response = await axios.post(url, orderData, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n    'Content-Type': 'application/json'\n      },\n    });\n\n    console.log(\"Order placed response:\", response.data);\n    return response;\n  } catch (ex) {\n    console.error(\"Place order error:\", ex.response?.data?.message || ex.message);\n    return { status: 'error', error: ex.response?.data?.message || ex.message };\n  }\n}\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}